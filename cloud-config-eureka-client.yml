spring:
  profiles:
    active:
      - dev
---
server:
 port: 7001
eureka:
  server:
    eviction-interval-timer-in-ms: 1000   #设置清理的间隔时间，而这个时间使用的是毫秒单位（默认是60秒），它的作用就是如果某个服务方挂掉了，过了这么长时间，就应该准备将服务从注册中心移除。建议使用默认的就可以了
    enable-self-preservation: true #设置为false表示关闭自我保护模式。自我保护模式是一种应对网络异常的安全保护措施，可以让Eureka集群更加的健壮、稳定。生产上最好是需要
  client:
    fetch-registry: false #表示不需要获取注册中心内注册的一些信息
    register-with-eureka: false #表示不需要往自己身上注册
    service-url:
      defaultZone: http://admin:user@localhost:7001/eureka #单个eureka，可以不用指定
      
  instance: # eureak实例定义
    hostname: localhost # 定义 Eureka 实例所在的主机名称，可以是域名或ip
spring:
  profiles: dev
  security:
    user:
      name: admin
      password: user
  application:
    name: cloud-config-eureka
---
server:
 port: 7002
eureka:
  server:
    eviction-interval-timer-in-ms: 1000   #设置清理的间隔时间，而后这个时间使用的是毫秒单位（默认是60秒）
    enable-self-preservation: false #设置为false表示关闭保护模式
  client:
    fetch-registry: false
    register-with-eureka: false
    service-url:
        defaultZone: http://admin:enjoy@localhost:7002/eureka
  instance: # eureak实例定义
    hostname: localhost # 定义 Eureka 实例所在的主机名称
spring:
  profiles: beta
  security:
    user:
      name: admin
      password: enjoy
  application:
    name: microcloud-config-eureka-client
